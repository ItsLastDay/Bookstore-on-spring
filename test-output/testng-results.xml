<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="11" failed="0" total="11" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="415" started-at="2014-08-29T05:43:31Z" finished-at="2014-08-29T05:43:31Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="415" started-at="2014-08-29T05:43:31Z" finished-at="2014-08-29T05:43:31Z">
      <class name="springapp.library.test.LogicTest">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:13Z" finished-at="2014-08-29T09:43:13Z">
          <exception class="org.apache.tools.ant.BuildException">
            <message>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: Не удалось установить соединение TCP/IP к серверу localhost123 по порту 1433. Ошибка: "null. Проверьте свойства соединения. Убедитесь, что на сервере запущен экземпляр SQL Server и он принимает TCP/IP-соединения по порту. Убедитесь, что TCP-соединения по этому порту не блокируются брандмауэром.".]]>
            </message>
            <full-stacktrace>
              <![CDATA[C:\Users\Asus\workspace\Prak6\db\build_db.xml:9: com.microsoft.sqlserver.jdbc.SQLServerException: Не удалось установить соединение TCP/IP к серверу localhost123 по порту 1433. Ошибка: "null. Проверьте свойства соединения. Убедитесь, что на сервере запущен экземпляр SQL Server и он принимает TCP/IP-соединения по порту. Убедитесь, что TCP-соединения по этому порту не блокируются брандмауэром.".
	at org.apache.tools.ant.taskdefs.JDBCTask.getConnection(JDBCTask.java:385)
	at org.apache.tools.ant.taskdefs.SQLExec.getConnection(SQLExec.java:942)
	at org.apache.tools.ant.taskdefs.SQLExec.execute(SQLExec.java:614)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at springapp.library.test.LogicTest.setUp(LogicTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:277)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Не удалось установить соединение TCP/IP к серверу localhost123 по порту 1433. Ошибка: "null. Проверьте свойства соединения. Убедитесь, что на сервере запущен экземпляр SQL Server и он принимает TCP/IP-соединения по порту. Убедитесь, что TCP-соединения по этому порту не блокируются брандмауэром.".
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:190)
	at com.microsoft.sqlserver.jdbc.SQLServerException.ConvertConnectExceptionToSQLServerException(SQLServerException.java:241)
	at com.microsoft.sqlserver.jdbc.SocketFinder.findSocket(IOBuffer.java:2243)
	at com.microsoft.sqlserver.jdbc.TDSChannel.open(IOBuffer.java:491)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:1309)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:991)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:827)
	at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:1012)
	at org.apache.tools.ant.taskdefs.JDBCTask.getConnection(JDBCTask.java:370)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.apache.tools.ant.BuildException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="addExistantAuthorToExistantBook()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="addExistantAuthorToExistantBook" duration-ms="8" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addExistantAuthorToExistantBook -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="addExistantBookToNewOrder()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="addExistantBookToNewOrder" duration-ms="9" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addExistantBookToNewOrder -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="addExistingBookToExistingOrder()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="addExistingBookToExistingOrder" duration-ms="4" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addExistingBookToExistingOrder -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="1" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="addNewCityThroughNewClient()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="addNewCityThroughNewClient" duration-ms="4" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewCityThroughNewClient -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="addNewGenreWithExistantBook1()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="addNewGenreWithExistantBook1" duration-ms="3" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewGenreWithExistantBook1 -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="addNewGenreWithExistantBook2()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="addNewGenreWithExistantBook2" duration-ms="3" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewGenreWithExistantBook2 -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="addNewPublisherThroughNewBook()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="addNewPublisherThroughNewBook" duration-ms="3" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewPublisherThroughNewBook -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="equalityOfBooks()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="equalityOfBooks" duration-ms="4" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalityOfBooks -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="exampleFilter()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="exampleFilter" duration-ms="2" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleFilter -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="readOrder()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="readOrder" duration-ms="3" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readOrder -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="SKIP" signature="startTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="startTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTrans -->
        <test-method status="SKIP" signature="readPushkin()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="readPushkin" duration-ms="3" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readPushkin -->
        <test-method status="SKIP" signature="commitTrans()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="commitTrans" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:31Z" finished-at="2014-08-29T09:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commitTrans -->
        <test-method status="FAIL" signature="tearDown()[pri:0, instance:springapp.library.test.LogicTest@852732d]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-08-29T09:43:32Z" finished-at="2014-08-29T09:43:32Z">
          <exception class="org.apache.tools.ant.BuildException">
            <message>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: Не удалось установить соединение TCP/IP к серверу localhost123 по порту 1433. Ошибка: "null. Проверьте свойства соединения. Убедитесь, что на сервере запущен экземпляр SQL Server и он принимает TCP/IP-соединения по порту. Убедитесь, что TCP-соединения по этому порту не блокируются брандмауэром.".]]>
            </message>
            <full-stacktrace>
              <![CDATA[C:\Users\Asus\workspace\Prak6\db\build_db.xml:31: com.microsoft.sqlserver.jdbc.SQLServerException: Не удалось установить соединение TCP/IP к серверу localhost123 по порту 1433. Ошибка: "null. Проверьте свойства соединения. Убедитесь, что на сервере запущен экземпляр SQL Server и он принимает TCP/IP-соединения по порту. Убедитесь, что TCP-соединения по этому порту не блокируются брандмауэром.".
	at org.apache.tools.ant.taskdefs.JDBCTask.getConnection(JDBCTask.java:385)
	at org.apache.tools.ant.taskdefs.SQLExec.getConnection(SQLExec.java:942)
	at org.apache.tools.ant.taskdefs.SQLExec.execute(SQLExec.java:614)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at springapp.library.test.LogicTest.tearDown(LogicTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:308)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Не удалось установить соединение TCP/IP к серверу localhost123 по порту 1433. Ошибка: "null. Проверьте свойства соединения. Убедитесь, что на сервере запущен экземпляр SQL Server и он принимает TCP/IP-соединения по порту. Убедитесь, что TCP-соединения по этому порту не блокируются брандмауэром.".
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:190)
	at com.microsoft.sqlserver.jdbc.SQLServerException.ConvertConnectExceptionToSQLServerException(SQLServerException.java:241)
	at com.microsoft.sqlserver.jdbc.SocketFinder.findSocket(IOBuffer.java:2243)
	at com.microsoft.sqlserver.jdbc.TDSChannel.open(IOBuffer.java:491)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:1309)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:991)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:827)
	at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:1012)
	at org.apache.tools.ant.taskdefs.JDBCTask.getConnection(JDBCTask.java:370)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.apache.tools.ant.BuildException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- springapp.library.test.LogicTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
